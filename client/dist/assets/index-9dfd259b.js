import{b as s,c as t,A as g,a as l,d as u,e as f,f as A,g as w,h as v,i as S,j as i,k as _,l as P,L as y,m as $,P as D,t as r,n as o,o as b,S as x}from"./index-e57bda4d.js";const C=r("<h2>Forgot Password</h2>"),F=r("<p>Don't have an account? </p>"),I=r("<p>If an account with that email exists, we've sent you a link to reset your password.</p>"),N=r("<div><p>We'll send you a link to reset your password.</p></div>"),k=r("<div></div>");function L(){const[c,h]=s(!1),[a,d]=s({email:""}),m=e=>{d({...a(),[e.target.name]:e.target.value})},p=e=>{if(e.preventDefault(),["email"].some(n=>!a()[n]))return o.error("Email is required!");b.post(`${x}/auth/forgot-password`,a()).then(n=>{console.log(n),o.success("Password reset email sent!"),h(!0)}).catch(n=>o.error("Something went wrong! Please try again later."))};return t(D,{get children(){return[t(g,{get children(){return C.cloneNode(!0)}}),l(()=>l(()=>!!c())()?t(u,{get children(){return t(f,{get children(){return I.cloneNode(!0)}})}}):t(u,{get children(){return[N.cloneNode(!0),t(A,{onSubmit:p,get children(){return[t(w,{get children(){return[t(v,{for:"email",children:"Email"}),t(S,{autocomplete:"new-password",type:"email",name:"email",get value(){return a().email},onChange:e=>m(e)})]}}),(()=>{const e=k.cloneNode(!0);return i(e,t(_,{type:"submit",children:"Submit"})),e})()]}})]}})),t(P,{get children(){const e=F.cloneNode(!0);return e.firstChild,i(e,t(y,{get children(){return t($,{href:"/auth/register",children:"Sign up"})}}),null),e}})]}})}export{L as default};
